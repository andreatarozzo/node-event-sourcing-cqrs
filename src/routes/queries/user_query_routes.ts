import express from "express";
import { Request, Response } from "express";
import { queryHandler } from "../../query_handlers/query_handler";
import { logger } from "../../utils/logger";

const userQueryRoute = express.Router();

/**
 * Returns the user profile history
 * @name get/get-user-profile-history
 */
userQueryRoute.get(
  "/get-user-profile-history",
  async (req: Request, res: Response, next) => {
    try {
      const userId = req.query.user_id as string;
      const response = await queryHandler.getUserHistory(userId);
      return res.status(200).json(response).end();
    } catch (e: any) {
      logger.error(e);
      const statusCode = e.statusCode ? e.statusCode : 500;
      return res.status(statusCode).json({ error: e.message }).end();
    }
  }
);

/**
 * Returns all transactions generated by the user.
 * @name get/get-user-accounts-info
 */
userQueryRoute.get(
  "/get-user-transactions",
  async (req: Request, res: Response, next) => {
    try {
      const userId = req.query.user_id as string;
      const response = await queryHandler.getUserTransactionsHistory(userId);
      return res.status(200).json(response).end();
    } catch (e: any) {
      logger.error(e);
      const statusCode = e.statusCode ? e.statusCode : 500;
      return res.status(statusCode).json({ error: e.message }).end();
    }
  }
);

/**
 * Returns all transactions generated by the user.
 * @name get/get-user-accounts-info
 */
userQueryRoute.get("/get-users", async (req: Request, res: Response, next) => {
  try {
    const response = await queryHandler.getUsers();
    return res.status(200).json(response).end();
  } catch (e: any) {
    logger.error(e);
    const statusCode = e.statusCode ? e.statusCode : 500;
    return res.status(statusCode).json({ error: e.message }).end();
  }
});

export default userQueryRoute;
